{"ast":null,"code":"// src/BmiCalculator.js\nimport React,{useState}from\"react\";import axios from\"axios\";import BenchmarkChart from\"./BenchmarkChart\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function BmiCalculator(){const[name,setName]=useState(\"\");const[weight,setWeight]=useState(\"\");const[height,setHeight]=useState(\"\");const[encryptedData,setEncryptedData]=useState(null);const[decryptedBmi,setDecryptedBmi]=useState(null);const API_BASE=\"https://he-backend-b8fsftgseseqdbch.ukwest-01.azurewebsites.net\";// Helper: Determine BMI category\nconst getBmiCategory=bmi=>{if(bmi<18.5)return\"Underweight\";if(bmi<=24.9)return\"Normal weight\";if(bmi<=29.9)return\"Overweight\";if(bmi<=34.9)return\"Obesity (Class 1)\";if(bmi<=39.9)return\"Obesity (Class 2)\";return\"Extreme Obesity\";};// Helper: Emoji for category\nconst getBmiEmoji=bmi=>{if(bmi<18.5)return\"😟\";if(bmi<=24.9)return\"😃\";if(bmi<=29.9)return\"😐\";if(bmi<=34.9)return\"😟\";if(bmi<=39.9)return\"😟\";return\"😨\";};// Helper: Color for category background\nconst getCategoryColor=bmi=>{if(bmi<18.5)return\"#FFDD57\";// Yellow\nif(bmi<=24.9)return\"#A8E6CF\";// Green\nif(bmi<=29.9)return\"#FFD3B6\";// Orange\nif(bmi<=39.9)return\"#FF8B94\";// Light Red\nreturn\"#FF5E57\";// Bright Red\n};const handleEncryptBMI=async()=>{try{const response=await axios.post(\"\".concat(API_BASE,\"/api/encrypt_bmi\"),{weight:parseInt(weight),height:parseInt(height)},{headers:{\"Content-Type\":\"application/json\"}});setEncryptedData(response.data);setDecryptedBmi(null);}catch(error){console.error(\"BMI Encryption error:\",error);}};const handleDecryptBMI=async()=>{if(!encryptedData){alert(\"No encrypted BMI data found! Please encrypt first.\");return;}try{const response=await axios.post(\"\".concat(API_BASE,\"/api/decrypt_bmi\"),{encrypted_weight:encryptedData.encrypted_weight,encrypted_height:encryptedData.encrypted_height},{headers:{\"Content-Type\":\"application/json\"}});const bmi=response.data.decrypted_bmi;const category=getBmiCategory(bmi);// Save record\nawait axios.post(\"\".concat(API_BASE,\"/api/save_bmi\"),{name:name||\"Anonymous\",weight:parseInt(weight),height:parseInt(height),bmi,category});setDecryptedBmi(bmi);}catch(error){console.error(\"BMI Decryption error:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",marginTop:\"50px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Homomorphic Encryption BMI Calculation\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter name\",value:name,onChange:e=>setName(e.target.value),style:{margin:\"10px\",padding:\"10px\"}}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter weight (kg)\",value:weight,onChange:e=>setWeight(e.target.value),style:{margin:\"10px\",padding:\"10px\"}}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter height (cm)\",value:height,onChange:e=>setHeight(e.target.value),style:{margin:\"10px\",padding:\"10px\"}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleEncryptBMI,style:{margin:\"10px\",padding:\"10px\"},children:\"Encrypt and Compute BMI\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDecryptBMI,style:{margin:\"10px\",padding:\"10px\"},children:\"Decrypt BMI\"})]}),encryptedData&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Encrypted Data\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Encrypted Weight:\"}),\" \",encryptedData.encrypted_weight]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Encrypted Height:\"}),\" \",encryptedData.encrypted_height]})]}),decryptedBmi!==null&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"30px\",padding:\"20px\",backgroundColor:getCategoryColor(decryptedBmi),borderRadius:\"10px\",display:\"inline-block\"},children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Decrypted BMI Result \",getBmiEmoji(decryptedBmi)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"BMI:\"}),\" \",decryptedBmi]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Category:\"}),\" \",getBmiCategory(decryptedBmi)]})]}),/*#__PURE__*/_jsx(BenchmarkChart,{})]});}export default BmiCalculator;","map":{"version":3,"names":["React","useState","axios","BenchmarkChart","jsx","_jsx","jsxs","_jsxs","BmiCalculator","name","setName","weight","setWeight","height","setHeight","encryptedData","setEncryptedData","decryptedBmi","setDecryptedBmi","API_BASE","getBmiCategory","bmi","getBmiEmoji","getCategoryColor","handleEncryptBMI","response","post","concat","parseInt","headers","data","error","console","handleDecryptBMI","alert","encrypted_weight","encrypted_height","decrypted_bmi","category","style","textAlign","marginTop","children","type","placeholder","value","onChange","e","target","margin","padding","onClick","backgroundColor","borderRadius","display"],"sources":["C:/Users/Bguda/Desktop/HE-WebApp/frontend/src/BmiCalculator.js"],"sourcesContent":["// src/BmiCalculator.js\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport BenchmarkChart from \"./BenchmarkChart\";\r\n\r\nfunction BmiCalculator() {\r\n  const [name, setName] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [height, setHeight] = useState(\"\");\r\n  const [encryptedData, setEncryptedData] = useState(null);\r\n  const [decryptedBmi, setDecryptedBmi] = useState(null);\r\n\r\n  const API_BASE =\r\n    \"https://he-backend-b8fsftgseseqdbch.ukwest-01.azurewebsites.net\";\r\n\r\n  // Helper: Determine BMI category\r\n  const getBmiCategory = (bmi) => {\r\n    if (bmi < 18.5) return \"Underweight\";\r\n    if (bmi <= 24.9) return \"Normal weight\";\r\n    if (bmi <= 29.9) return \"Overweight\";\r\n    if (bmi <= 34.9) return \"Obesity (Class 1)\";\r\n    if (bmi <= 39.9) return \"Obesity (Class 2)\";\r\n    return \"Extreme Obesity\";\r\n  };\r\n\r\n  // Helper: Emoji for category\r\n  const getBmiEmoji = (bmi) => {\r\n    if (bmi < 18.5) return \"😟\";\r\n    if (bmi <= 24.9) return \"😃\";\r\n    if (bmi <= 29.9) return \"😐\";\r\n    if (bmi <= 34.9) return \"😟\";\r\n    if (bmi <= 39.9) return \"😟\";\r\n    return \"😨\";\r\n  };\r\n\r\n  // Helper: Color for category background\r\n  const getCategoryColor = (bmi) => {\r\n    if (bmi < 18.5) return \"#FFDD57\"; // Yellow\r\n    if (bmi <= 24.9) return \"#A8E6CF\"; // Green\r\n    if (bmi <= 29.9) return \"#FFD3B6\"; // Orange\r\n    if (bmi <= 39.9) return \"#FF8B94\"; // Light Red\r\n    return \"#FF5E57\"; // Bright Red\r\n  };\r\n\r\n  const handleEncryptBMI = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_BASE}/api/encrypt_bmi`,\r\n        { weight: parseInt(weight), height: parseInt(height) },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n      setEncryptedData(response.data);\r\n      setDecryptedBmi(null);\r\n    } catch (error) {\r\n      console.error(\"BMI Encryption error:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDecryptBMI = async () => {\r\n    if (!encryptedData) {\r\n      alert(\"No encrypted BMI data found! Please encrypt first.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_BASE}/api/decrypt_bmi`,\r\n        {\r\n          encrypted_weight: encryptedData.encrypted_weight,\r\n          encrypted_height: encryptedData.encrypted_height,\r\n        },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      );\r\n      const bmi = response.data.decrypted_bmi;\r\n      const category = getBmiCategory(bmi);\r\n      // Save record\r\n      await axios.post(`${API_BASE}/api/save_bmi`, {\r\n        name: name || \"Anonymous\",\r\n        weight: parseInt(weight),\r\n        height: parseInt(height),\r\n        bmi,\r\n        category,\r\n      });\r\n      setDecryptedBmi(bmi);\r\n    } catch (error) {\r\n      console.error(\"BMI Decryption error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h1>Homomorphic Encryption BMI Calculation</h1>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        style={{ margin: \"10px\", padding: \"10px\" }}\r\n      />\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Enter weight (kg)\"\r\n        value={weight}\r\n        onChange={(e) => setWeight(e.target.value)}\r\n        style={{ margin: \"10px\", padding: \"10px\" }}\r\n      />\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Enter height (cm)\"\r\n        value={height}\r\n        onChange={(e) => setHeight(e.target.value)}\r\n        style={{ margin: \"10px\", padding: \"10px\" }}\r\n      />\r\n\r\n      <div>\r\n        <button\r\n          onClick={handleEncryptBMI}\r\n          style={{ margin: \"10px\", padding: \"10px\" }}\r\n        >\r\n          Encrypt and Compute BMI\r\n        </button>\r\n        <button\r\n          onClick={handleDecryptBMI}\r\n          style={{ margin: \"10px\", padding: \"10px\" }}\r\n        >\r\n          Decrypt BMI\r\n        </button>\r\n      </div>\r\n\r\n      {encryptedData && (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h2>Encrypted Data</h2>\r\n          <p>\r\n            <strong>Encrypted Weight:</strong> {encryptedData.encrypted_weight}\r\n          </p>\r\n          <p>\r\n            <strong>Encrypted Height:</strong> {encryptedData.encrypted_height}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {decryptedBmi !== null && (\r\n        <div\r\n          style={{\r\n            marginTop: \"30px\",\r\n            padding: \"20px\",\r\n            backgroundColor: getCategoryColor(decryptedBmi),\r\n            borderRadius: \"10px\",\r\n            display: \"inline-block\",\r\n          }}\r\n        >\r\n          <h2>Decrypted BMI Result {getBmiEmoji(decryptedBmi)}</h2>\r\n          <p>\r\n            <strong>BMI:</strong> {decryptedBmi}\r\n          </p>\r\n          <p>\r\n            <strong>Category:</strong> {getBmiCategory(decryptedBmi)}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <BenchmarkChart />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BmiCalculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}