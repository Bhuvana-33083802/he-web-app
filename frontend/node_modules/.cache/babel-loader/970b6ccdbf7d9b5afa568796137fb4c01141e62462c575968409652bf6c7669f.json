{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bguda\\\\Desktop\\\\HE-WebApp\\\\frontend\\\\src\\\\BmiCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BmiCalculator() {\n  _s();\n  const [activeAction, setActiveAction] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [height, setHeight] = useState(\"\");\n  const [chartData, setChartData] = useState([]);\n  const runBenchmark = () => {\n    const simulatedData = [{\n      name: \"Step 1\",\n      performance: 320\n    }, {\n      name: \"Step 2\",\n      performance: 400\n    }, {\n      name: \"Step 3\",\n      performance: 300\n    }, {\n      name: \"Step 4\",\n      performance: 450\n    }];\n    setChartData(simulatedData);\n  };\n  const handleAction = action => {\n    setActiveAction(action);\n    if (action === \"encrypt\") {\n      console.log(\"Encrypting and computing BMI with\", weight, height);\n    } else if (action === \"decrypt\") {\n      console.log(\"Decrypting BMI...\");\n      runBenchmark(); // ✅ Automatically shows the chart\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-10 px-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Homomorphic Encryption BMI Calculation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter weight (kg)\",\n        value: weight,\n        onChange: e => setWeight(e.target.value),\n        className: \"border border-gray-400 p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter height (cm)\",\n        value: height,\n        onChange: e => setHeight(e.target.value),\n        className: \"border border-gray-400 p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-x-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAction(\"encrypt\"),\n        className: `px-6 py-2 font-semibold rounded border transition duration-300 ${activeAction === \"encrypt\" ? \"bg-green-600 text-white\" : \"bg-white text-black hover:bg-green-100\"}`,\n        children: \"Encrypt and Compute BMI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAction(\"decrypt\"),\n        className: `px-6 py-2 font-semibold rounded border transition duration-300 ${activeAction === \"decrypt\" ? \"bg-blue-600 text-white\" : \"bg-white text-black hover:bg-blue-100\"}`,\n        children: \"Decrypt BMI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), chartData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-3xl mt-6 bg-white p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Benchmark Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"performance\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(BmiCalculator, \"iayQ9sTN2YnNiI9PjjGHAWME+bU=\");\n_c = BmiCalculator;\nvar _c;\n$RefreshReg$(_c, \"BmiCalculator\");","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","BmiCalculator","_s","activeAction","setActiveAction","weight","setWeight","height","setHeight","chartData","setChartData","runBenchmark","simulatedData","name","performance","handleAction","action","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","width","data","strokeDasharray","dataKey","stroke","_c","$RefreshReg$"],"sources":["C:/Users/Bguda/Desktop/HE-WebApp/frontend/src/BmiCalculator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nexport default function BmiCalculator() {\r\n  const [activeAction, setActiveAction] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [height, setHeight] = useState(\"\");\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const runBenchmark = () => {\r\n    const simulatedData = [\r\n      { name: \"Step 1\", performance: 320 },\r\n      { name: \"Step 2\", performance: 400 },\r\n      { name: \"Step 3\", performance: 300 },\r\n      { name: \"Step 4\", performance: 450 },\r\n    ];\r\n    setChartData(simulatedData);\r\n  };\r\n\r\n  const handleAction = (action) => {\r\n    setActiveAction(action);\r\n\r\n    if (action === \"encrypt\") {\r\n      console.log(\"Encrypting and computing BMI with\", weight, height);\r\n    } else if (action === \"decrypt\") {\r\n      console.log(\"Decrypting BMI...\");\r\n      runBenchmark(); // ✅ Automatically shows the chart\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center mt-10 px-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">\r\n        Homomorphic Encryption BMI Calculation\r\n      </h1>\r\n\r\n      <div className=\"space-x-2 mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter weight (kg)\"\r\n          value={weight}\r\n          onChange={(e) => setWeight(e.target.value)}\r\n          className=\"border border-gray-400 p-2 rounded\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter height (cm)\"\r\n          value={height}\r\n          onChange={(e) => setHeight(e.target.value)}\r\n          className=\"border border-gray-400 p-2 rounded\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-x-4 mb-6\">\r\n        <button\r\n          onClick={() => handleAction(\"encrypt\")}\r\n          className={`px-6 py-2 font-semibold rounded border transition duration-300 ${\r\n            activeAction === \"encrypt\"\r\n              ? \"bg-green-600 text-white\"\r\n              : \"bg-white text-black hover:bg-green-100\"\r\n          }`}\r\n        >\r\n          Encrypt and Compute BMI\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => handleAction(\"decrypt\")}\r\n          className={`px-6 py-2 font-semibold rounded border transition duration-300 ${\r\n            activeAction === \"decrypt\"\r\n              ? \"bg-blue-600 text-white\"\r\n              : \"bg-white text-black hover:bg-blue-100\"\r\n          }`}\r\n        >\r\n          Decrypt BMI\r\n        </button>\r\n      </div>\r\n\r\n      {/* Benchmark chart shows only after Decrypt BMI is clicked */}\r\n      {chartData.length > 0 && (\r\n        <div className=\"w-full max-w-3xl mt-6 bg-white p-4 rounded shadow\">\r\n          <h3 className=\"text-lg font-semibold mb-2\">Benchmark Results</h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={chartData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"performance\" stroke=\"#8884d8\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}